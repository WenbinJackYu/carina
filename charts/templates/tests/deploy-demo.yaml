{{- range $value := .Values.storage.StorageClass }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $value.disktype }}-deploy-demo-test
  namespace: {{ $.Release.Namespace }}
  labels:
    app: web-server
    storageclass: {{ $value.disktype }}
  annotations:
    carina.storage.io/allow-pod-migration-if-node-notready: "true"
    helm.sh/hook: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-server
      storageclass: {{ $value.disktype }}
  template:
    metadata:
      labels:
        app: web-server
        storageclass: {{ $value.disktype }}
      annotations:
        carina.storage.io/allow-pod-migration-if-node-notready: "true"
    spec:
      containers:
        - name: web-server
          image: nginx:latest
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: mypvc
              mountPath: /var/lib/www/html
      volumes:
        - name: mypvc
          persistentVolumeClaim:
            claimName: {{ $value.disktype }}-testpvc
            readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $value.disktype }}-testpvc
  namespace: {{ $.Release.Namespace }}
  annotations:
    helm.sh/hook: test
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: {{ $value.disktype }}
  volumeMode: Filesystem
{{- end -}}
